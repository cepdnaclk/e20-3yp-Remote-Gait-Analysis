spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true  #This ensures the execution happens after Hibernate creates the tables
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  sql:
    init:
      mode: always

jwt:
  secret: ${JWT_SECRET}
  expiration:
    ms: 432000000


mqtt:
  client:
    endpoint: ${MQTT_CLIENT_ENDPOINT}
    id: ${MQTT_CLIENT_ID}
  aws:
    accessKey: ${MQTT_AWS_ACCESS_KEY}
    accessId: ${MQTT_AWS_ACCESS_ID}

cloud:
  aws:
    credentials:
      access-key: ${MQTT_AWS_ACCESS_ID}
      secret-key: ${MQTT_AWS_ACCESS_KEY}
    region:
      static: eu-north-1
      auto: false

# NEW: S3 Configuration section
aws:
  region: eu-north-1
  s3:
    bucket: gait-analysis-reports

app:
  sqs:
    queue-name: rehabgait-processing-request-dev2
  cors:
    allowed-origin: http://localhost:5173



microservices:
  data:
    processing:
      url: http://localhost:8000/process-session




# http://localhost:8080/swagger-ui.html

logging:
  level:
    org.springframework.security: DEBUG


#client:
#  domains:
#        list:
#          - apple
#          - banana


#logging:
#  level:
#    org:
#      springframework: DEBUG
#      hibernate.SQL: DEBUG
#    com:
#      _yp:
#        gaitMate: DEBUG